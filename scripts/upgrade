#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_docker_image_extract
source ynh_python_install
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="${app}_admin_frontend" --action="stop"
ynh_systemctl --service="${app}_cloud" --action="stop"
ynh_systemctl --service="${app}_worker" --action="stop"
ynh_systemctl --service="${app}_ai" --action="stop"
ynh_systemctl --service="${app}_gotrue" --action="stop"
ynh_systemctl --service="${app}_minio" --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir/appflowy_minio" --source_id="minio" --full_replace
chmod +x "$install_dir/appflowy_minio/minio"

ynh_setup_source --dest_dir="$install_dir/build/pgvector" --source_id="pgvector" 

docker_version="$(ynh_app_upstream_version)"

ynh_docker_image_extract --dest_dir="$install_dir/build/gotrue/" --image_spec="appflowyinc/gotrue:$docker_version"
mkdir -p $install_dir/appflowy_gotrue/migrations/
cp $install_dir/build/gotrue/auth $install_dir/appflowy_gotrue/appflowy_gotrue
rsync -a --delete $install_dir/build/gotrue/migrations/ $install_dir/appflowy_gotrue/migrations/
ynh_safe_rm "$install_dir/build/gotrue/"

ynh_docker_image_extract --dest_dir="$install_dir/build/appflowy_ai/" --image_spec="appflowyinc/appflowy_ai:0.6.16"
mkdir -p $install_dir/appflowy_ai/
rsync -a --delete $install_dir/build/appflowy_ai/usr/src/app/ $install_dir/appflowy_ai/
ynh_safe_rm "$install_dir/build/appflowy_ai/"

ynh_docker_image_extract --dest_dir="$install_dir/build/appflowy_worker/" --image_spec="appflowyinc/appflowy_worker:$docker_version"
mkdir -p $install_dir/appflowy_worker/
cp $install_dir/build/appflowy_worker/usr/local/bin/appflowy_worker $install_dir/appflowy_worker/appflowy_worker
ynh_safe_rm "$install_dir/build/appflowy_worker/"

ynh_docker_image_extract --dest_dir="$install_dir/build/appflowy_cloud/" --image_spec="appflowyinc/appflowy_cloud:$docker_version"
mkdir -p $install_dir/appflowy_cloud/
cp $install_dir/build/appflowy_cloud/usr/local/bin/appflowy_cloud $install_dir/appflowy_cloud/appflowy_cloud
ynh_safe_rm "$install_dir/build/appflowy_cloud/"

ynh_docker_image_extract --dest_dir="$install_dir/build/admin_frontend/" --image_spec="appflowyinc/admin_frontend:$docker_version"
mkdir -p $install_dir/appflowy_admin_frontend/assets/
cp $install_dir/build/admin_frontend/usr/local/bin/admin_frontend $install_dir/appflowy_admin_frontend/appflowy_admin_frontend
rsync -a --delete $install_dir/build/admin_frontend/app/assets/ $install_dir/appflowy_admin_frontend/assets/

ynh_docker_image_extract --dest_dir="$install_dir/build/appflowy_web/" --image_spec="appflowyinc/appflowy_web:$docker_version_web"
mkdir -p $install_dir/appflowy_web/
#cp $install_dir/build/appflowy_cloud/usr/local/bin/appflowy_cloud $install_dir/appflowy_cloud/appflowy_cloud
#ynh_safe_rm "$install_dir/build/appflowy_cloud/"
ynh_safe_rm "$install_dir/build/admin_frontend/"

ynh_python_install

ynh_install_nodejs --nodejs_version="$NODEJS_VERSION"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

ynh_config_add --template="appflowy_minio.env" --destination="$install_dir/appflowy_minio/.env"
chmod 400 "$install_dir/appflowy_minio/.env"
chown "$app:$app" "$install_dir/appflowy_minio/.env"

local_hostname=$(hostname)
ynh_config_add --template="appflowy_gotrue.env" --destination="$install_dir/appflowy_gotrue/.env"
chmod 400 "$install_dir/appflowy_gotrue/.env"
chown "$app:$app" "$install_dir/appflowy_gotrue/.env"

ynh_config_add --template="appflowy_ai.env" --destination="$install_dir/appflowy_ai/.env"
chmod 400 "$install_dir/appflowy_ai/.env"
chown "$app:$app" "$install_dir/appflowy_ai/.env"

ynh_config_add --template="appflowy_worker.env" --destination="$install_dir/appflowy_worker/.env"
chmod 400 "$install_dir/appflowy_worker/.env"
chown "$app:$app" "$install_dir/appflowy_worker/.env"

ynh_config_add --template="appflowy_cloud.env" --destination="$install_dir/appflowy_cloud/.env"
chmod 400 "$install_dir/appflowy_cloud/.env"
chown "$app:$app" "$install_dir/appflowy_cloud/.env"

ynh_config_add --template="appflowy_admin_frontend.env" --destination="$install_dir/appflowy_admin_frontend/.env"
chmod 400 "$install_dir/appflowy_admin_frontend/.env"
chown "$app:$app" "$install_dir/appflowy_admin_frontend/.env"

ynh_config_add --template="appflowy_web.env" --destination="$install_dir/appflowy_web/.env"
chmod 400 "$install_dir/appflowy_web/.env"
chown "$app:$app" "$install_dir/appflowy_web/.env"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd --service="${app}_minio" --template="appflowy_minio.service"
yunohost service add ${app}_minio --description="AppFlowy-MinIO storage" --log="/var/log/$app/${app}_minio.log"

ynh_config_add_systemd --service="${app}_gotrue" --template="appflowy_gotrue.service"
yunohost service add ${app}_gotrue --description="AppFlowy-Gotrue Authentication" --log="/var/log/$app/${app}_gotrue.log"

ynh_config_add_systemd --service="${app}_ai" --template="appflowy_ai.service"
yunohost service add ${app}_ai --description="AppFlowy-Ai" --log="/var/log/$app/${app}_ai.log"

ynh_config_add_systemd --service="${app}_worker" --template="appflowy_worker.service"
yunohost service add ${app}_worker --description="AppFlowy-Worker" --log="/var/log/$app/${app}_worker.log"

ynh_config_add_systemd --service="${app}_cloud" --template="appflowy_cloud.service"
yunohost service add ${app}_cloud --description="AppFlowy-Cloud" --log="/var/log/$app/${app}_cloud.log"

ynh_config_add_systemd --service="${app}_admin_frontend" --template="appflowy_admin_frontend.service"
yunohost service add ${app}_admin_frontend --description="AppFlowy-Admin-Frontend" --log="/var/log/$app/${app}_admin_frontend.log"

ynh_config_add_systemd --service="${app}_web" --template="appflowy_web.service"
yunohost service add ${app}_web --description="AppFlowy-Web" --log="/var/log/$app/${app}_web.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building app..."

# Installing pgvector
pushd "$install_dir/build/pgvector"
	make
	make install
popd

ynh_safe_rm "$install_dir/build/"

# Installing ai
pushd "$install_dir/appflowy_ai"
	PATH=$path_with_python pip install --no-cache-dir poetry
	cd server
	PATH=$path_with_python poetry config virtualenvs.create false && PATH=$path_with_python poetry install --no-root
popd

# Installing web UI
pushd "$install_dir/appflowy_web_ui"
    ynh_use_nodejs
    env $ynh_node_load_PATH corepack enable
    env $ynh_node_load_PATH corepack prepare pnpm@8.5.0 --activate
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" NODE_ENV=production pnpm install
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" NODE_ENV=production pnpm run build
popd

chown -R "$app:www-data" "$install_dir"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="${app}_minio" --action="start" --log_path="/var/log/$app/${app}_minio.log" --wait_until="WebUI:"
ynh_systemctl --service="${app}_gotrue" --action="start" --log_path="/var/log/$app/${app}_gotrue.log" --wait_until="GoTrue API started"
ynh_systemctl --service="${app}_ai" --action="start" --log_path="/var/log/$app/${app}_ai.log" --wait_until="Uvicorn running"
ynh_systemctl --service="${app}_worker" --action="start" --log_path="/var/log/$app/${app}_worker.log" --wait_until="Starting importer worker"
ynh_systemctl --service="${app}_cloud" --action="start" --log_path="/var/log/$app/${app}_cloud.log" --wait_until="Server started"
ynh_systemctl --service="${app}_admin_frontend" --action="start" --log_path="/var/log/$app/${app}_admin_frontend.log" --wait_until="listening on"
ynh_systemctl --service="${app}_web" --action="start" --log_path="/var/log/$app/${app}_web.log" --wait_until=""

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
