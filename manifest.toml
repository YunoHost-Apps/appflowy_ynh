#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "appflowy"
name = "AppFlowy"
description.en = "Bring projects, wikis, and teams together with AI"

version = "0.9.44~ynh1"

maintainers = ["yalh76"]

[upstream]
license = "AGPL-3.0-only"
website = "https://appflowy.io/"
admindoc = "https://github.com/AppFlowy-IO/AppFlowy-Cloud/blob/main/doc/DEPLOYMENT.md"
userdoc = "https://docs.appflowy.io/docs/guides/appflowy/self-hosting-appflowy"
code = "https://github.com/AppFlowy-IO/AppFlowy-Cloud"

[integration]
yunohost = ">= 12.0"
helpers_version = "2.1"
architectures = "all"
multi_instance = false

ldap = false

sso = false

disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    type = "domain"

    [install.init_main_permission]
    type = "group"
    default = "visitors"

    [install.admin]
    type = "user"

    [install.password]
    type = "password"

    [install.openai_api_key]
    ask.en = "Provide an OpenAI API KEY"
    type = "text"

[resources]

    [resources.sources]

    [resources.sources.main]
    url = "https://github.com/AppFlowy-IO/AppFlowy-Cloud/archive/refs/tags/0.9.44.tar.gz"
    sha256 = "401e508cd7ce35df875bafc83cb0cfebbd322411f26c9fb726e99c0d684c619a"
    prefetch = false
    autoupdate.strategy = "latest_github_tag"

    [resources.sources.frontend]
    url = "https://github.com/AppFlowy-IO/AppFlowy-Web/archive/refs/tags/v0.1.13.tar.gz"
    sha256 = "67724374d650fa15e5f23c76b84c7c4f4197f82911a07a667621d9dc78a788fb"
    
    [resources.sources.minio]
    extract = false
    in_subdir = false
    prefetch = false
    
    arm64.url = "https://dl.min.io/server/minio/release/linux-arm64/archive/minio.RELEASE.2024-12-18T13-15-44Z"
    arm64.sha256 = "455c9b3093b7c1e6153c85cfd745c7c401a92497346ba24dbe45775c7b3ab1cd"

    amd64.url = "https://dl.min.io/server/minio/release/linux-amd64/archive/minio.RELEASE.2024-12-18T13-15-44Z"
    amd64.sha256 = "88182336ab5793488f2caad54846056b330f0dcb5c488b60d52434beeebae3ca"

    # Autoupdate cannot work because minio assets are on a specific website ...
    #autoupdate.strategy = "latest_github_tag"

    [resources.sources.pgvector]
    url = "https://github.com/pgvector/pgvector/archive/refs/tags/v0.8.0.tar.gz"
    sha256 = "867a2c328d4928a5a9d6f052cd3bc78c7d60228a9b914ad32aa3db88e9de27b0"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting
    minio.default = 9000
    minio_console.default = 9001
    gotrue.default = 9999
    cloud.default = 8000
    admin_frontend.default = 3000
    ai.default = 5001
    web.default = 3001

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "rsync, openssl, libc6, libssl-dev, postgresql, redis, gcc, make, postgresql-server-dev-15\\|postgresql-server-dev-17, build-essential, libssl-dev, zlib1g-dev, libbz2-dev, libreadline-dev, libsqlite3-dev, curl, git, libncursesw5-dev, xz-utils, tk-dev, libxml2-dev, libxmlsec1-dev, libffi-dev, liblzma-dev, libpq-dev"

    [resources.database]
    # This will automatically provision/deprovison a DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
